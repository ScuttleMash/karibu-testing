plugins {
    id "io.spring.dependency-management" version "1.0.4.RELEASE"
}
apply plugin: 'maven-publish'
apply plugin: 'kotlin'
apply plugin: "com.jfrog.bintray"

repositories {
    maven { url "https://repo.vaadin.com/nexus/content/repositories/flow" }
    maven { url 'https://dl.bintray.com/webjars/maven' }
    mavenCentral()
}

dependencyManagement {
    imports { mavenBom "com.vaadin:vaadin-bom:$vaadin10_version" }
}

dependencies {
    compile "com.vaadin:vaadin-core:$vaadin10_version"
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile("com.github.mvysny.dynatest:dynatest:${dynatest_version}")
    testCompile('org.slf4j:slf4j-simple:1.7.25')

    // to have class autodiscovery functionality
    compile "com.vaadin.external.atmosphere:atmosphere-runtime:2.4.5.vaadin2"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId 'karibu-testing-v10'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Karibu Testing, support for browserless Vaadin 10 testing in Kotlin')
                root.appendNode('name', 'Karibu Testing v10')
                root.appendNode('url', 'https://github.com/mvysny/karibu-testing')
            }
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

build.dependsOn publishToMavenLocal

bintray {
    user = local.getProperty('bintray.user')
    key = local.getProperty('bintray.key')
    pkg {
        repo = 'github'
        name = 'com.github.kaributesting'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/mvysny/karibu-testing'
        publish = true
        publications = ['mavenJava']
        version {
            name = project.version
            released = new Date()
        }
    }
}
